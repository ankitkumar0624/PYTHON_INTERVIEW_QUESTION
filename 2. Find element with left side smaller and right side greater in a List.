## 2.Find element with left side smaller/right side greater in a List.


Approach :: 1,  O(n**2)
L =[3,1,2,5,8,7,9]
n=len(L)

for i in range(1,n-1):

  flag=True

  for j in range(0,i):
    if(L[j]>L[i]):
      flag=False
      break

  for k in range(i+1,n):
    if(L[k]<L[i]):
      flag = False
      break

  if(flag):
    print(L[i])


Approach :: 2,  O(n**2)

L =[3,1,2,5,8,7,9]
n=len(L)

for i in range(1,n-1):
  if(max(L[:i]))<L[i]<min(L[i+1:]):
    print(L[i])



Approach::3 , O(n)

L =[3,1,2,5,8,7,9]
n=len(L)

max_arr=[]
min_arr=[]

max_val=L[0]
min_val=L[n-1]

for i in range(0,n):

  if(L[i]>max_val) :
    max_val=L[i]
  max_arr.append(max_val)


for i in range(n-1,-1,-1):

  if(L[i]<min_val) :
    min_val=L[i]
  min_arr.append(min_val)

min_arr=min_arr[-1::-1]
  

print(L)
print(max_arr)
print(min_arr)


for i in range(1,n-1):
  if(max_arr[i-1]< L[i] < min_arr[i+1]):
    print(L[i])
